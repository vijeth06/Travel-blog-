import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  Paper,\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  CardHeader,\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Skeleton,\n  Button,\n  Divider,\n  Chip,\n  CircularProgress\n} from '@mui/material';\nimport {\n  TrendingUp,\n  PersonAdd,\n  LocationOn,\n  AccessTime\n} from '@mui/icons-material';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport BlogCard from '../components/BlogCard';\nimport FollowButton from '../features/social/FollowButton';\nimport { getSocialFeed, getRecommendedUsers } from '../api/social';\nimport { formatDistanceToNow } from 'date-fns';\n\nconst SocialFeedPage = () => {\n  const [feedBlogs, setFeedBlogs] = useState([]);\n  const [recommendedUsers, setRecommendedUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [feedLoading, setFeedLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  \n  const { user, isAuthenticated } = useSelector((state) => state.auth);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n\n    loadInitialData();\n  }, [isAuthenticated, navigate]);\n\n  const loadInitialData = async () => {\n    try {\n      setLoading(true);\n      await Promise.all([\n        loadSocialFeed(1, true),\n        loadRecommendedUsers()\n      ]);\n    } catch (error) {\n      console.error('Error loading initial data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadSocialFeed = async (pageNum = 1, reset = false) => {\n    try {\n      setFeedLoading(true);\n      const response = await getSocialFeed(pageNum, 10);\n      \n      if (reset) {\n        setFeedBlogs(response.blogs);\n      } else {\n        setFeedBlogs(prev => [...prev, ...response.blogs]);\n      }\n      \n      setHasMore(pageNum < response.pages);\n      setPage(pageNum);\n    } catch (error) {\n      console.error('Error loading social feed:', error);\n    } finally {\n      setFeedLoading(false);\n    }\n  };\n\n  const loadRecommendedUsers = async () => {\n    try {\n      const response = await getRecommendedUsers(5);\n      setRecommendedUsers(response.users);\n    } catch (error) {\n      console.error('Error loading recommended users:', error);\n    }\n  };\n\n  const handleLoadMore = () => {\n    if (!feedLoading && hasMore) {\n      loadSocialFeed(page + 1, false);\n    }\n  };\n\n  const handleFollowChange = () => {\n    // Refresh recommended users after following/unfollowing\n    loadRecommendedUsers();\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            {[...Array(3)].map((_, index) => (\n              <Card key={index} sx={{ mb: 3 }}>\n                <CardHeader\n                  avatar={<Skeleton variant=\"circular\" width={40} height={40} />}\n                  title={<Skeleton variant=\"text\" width=\"40%\" />}\n                  subheader={<Skeleton variant=\"text\" width=\"20%\" />}\n                />\n                <Skeleton variant=\"rectangular\" height={200} />\n                <CardContent>\n                  <Skeleton variant=\"text\" width=\"80%\" />\n                  <Skeleton variant=\"text\" width=\"60%\" />\n                </CardContent>\n              </Card>\n            ))}\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Paper sx={{ p: 2 }}>\n              <Skeleton variant=\"text\" width=\"60%\" height={30} />\n              {[...Array(3)].map((_, index) => (\n                <Box key={index} sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n                  <Skeleton variant=\"circular\" width={40} height={40} sx={{ mr: 2 }} />\n                  <Box sx={{ flex: 1 }}>\n                    <Skeleton variant=\"text\" width=\"70%\" />\n                    <Skeleton variant=\"text\" width=\"50%\" />\n                  </Box>\n                </Box>\n              ))}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Grid container spacing={3}>\n        {/* Main Feed */}\n        <Grid item xs={12} md={8}>\n          <Box sx={{ mb: 3 }}>\n            <Typography variant=\"h4\" gutterBottom>\n              Your Social Feed\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              Stay updated with travel stories from people you follow\n            </Typography>\n          </Box>\n\n          {feedBlogs.length === 0 && !feedLoading ? (\n            <Paper sx={{ p: 4, textAlign: 'center' }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Your feed is empty\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                Start following other travelers to see their stories here, or explore all blogs to find interesting content.\n              </Typography>\n              <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center' }}>\n                <Button \n                  variant=\"contained\" \n                  onClick={() => navigate('/blogs')}\n                >\n                  Explore All Blogs\n                </Button>\n                <Button \n                  variant=\"outlined\" \n                  onClick={() => navigate('/blogs/new')}\n                >\n                  Write Your First Story\n                </Button>\n              </Box>\n            </Paper>\n          ) : (\n            <>\n              <Grid container spacing={3}>\n                {feedBlogs.map((blog) => (\n                  <Grid item xs={12} key={blog._id}>\n                    <BlogCard \n                      blog={blog} \n                      showAuthor={true}\n                    />\n                  </Grid>\n                ))}\n              </Grid>\n\n              {hasMore && (\n                <Box sx={{ textAlign: 'center', mt: 4 }}>\n                  <Button \n                    onClick={handleLoadMore}\n                    disabled={feedLoading}\n                    variant=\"outlined\"\n                    size=\"large\"\n                  >\n                    {feedLoading ? (\n                      <>\n                        <CircularProgress size={20} sx={{ mr: 1 }} />\n                        Loading...\n                      </>\n                    ) : (\n                      'Load More Stories'\n                    )}\n                  </Button>\n                </Box>\n              )}\n            </>\n          )}\n        </Grid>\n\n        {/* Sidebar */}\n        <Grid item xs={12} md={4}>\n          {/* Recommended Users */}\n          <Paper sx={{ p: 3, mb: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <PersonAdd sx={{ mr: 1, color: 'primary.main' }} />\n              <Typography variant=\"h6\">\n                Discover Travelers\n              </Typography>\n            </Box>\n            \n            {recommendedUsers.length === 0 ? (\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                No recommendations available\n              </Typography>\n            ) : (\n              <List sx={{ p: 0 }}>\n                {recommendedUsers.map((user, index) => (\n                  <React.Fragment key={user._id}>\n                    <ListItem \n                      sx={{ \n                        px: 0,\n                        cursor: 'pointer',\n                        '&:hover': { bgcolor: 'action.hover' },\n                        borderRadius: 1\n                      }}\n                      onClick={() => navigate(`/users/${user._id}`)}\n                    >\n                      <ListItemAvatar>\n                        <Avatar \n                          src={user.profilePicture}\n                          sx={{ width: 40, height: 40 }}\n                        >\n                          {user.username?.charAt(0)?.toUpperCase()}\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={\n                          <Typography variant=\"body2\" fontWeight={600}>\n                            {user.username}\n                          </Typography>\n                        }\n                        secondary={\n                          <Box>\n                            {user.bio && (\n                              <Typography variant=\"caption\" color=\"text.secondary\">\n                                {user.bio.length > 50 ? `${user.bio.substring(0, 50)}...` : user.bio}\n                              </Typography>\n                            )}\n                            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block' }}>\n                              {user.followerCount} followers\n                            </Typography>\n                          </Box>\n                        }\n                      />\n                      <FollowButton\n                        userId={user._id}\n                        userName={user.username}\n                        size=\"small\"\n                        variant=\"chip\"\n                        onFollowChange={handleFollowChange}\n                      />\n                    </ListItem>\n                    {index < recommendedUsers.length - 1 && <Divider />}\n                  </React.Fragment>\n                ))}\n              </List>\n            )}\n          </Paper>\n\n          {/* Trending Topics */}\n          <Paper sx={{ p: 3, mb: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <TrendingUp sx={{ mr: 1, color: 'primary.main' }} />\n              <Typography variant=\"h6\">\n                Trending Topics\n              </Typography>\n            </Box>\n            \n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n              {[\n                'Beach Destinations',\n                'Mountain Hiking',\n                'City Breaks',\n                'Food Travel',\n                'Adventure Sports',\n                'Cultural Tours'\n              ].map((topic) => (\n                <Chip\n                  key={topic}\n                  label={topic}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  clickable\n                  onClick={() => navigate(`/search?q=${encodeURIComponent(topic)}`)}\n                  sx={{\n                    '&:hover': {\n                      bgcolor: 'primary.main',\n                      color: 'white'\n                    }\n                  }}\n                />\n              ))}\n            </Box>\n          </Paper>\n\n          {/* Quick Actions */}\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Quick Actions\n            </Typography>\n            \n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                onClick={() => navigate('/blogs/new')}\n                sx={{ justifyContent: 'flex-start' }}\n              >\n                ✍️ Write a Travel Story\n              </Button>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                onClick={() => navigate('/packages')}\n                sx={{ justifyContent: 'flex-start' }}\n              >\n                🏝️ Browse Travel Packages\n              </Button>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                onClick={() => navigate('/map')}\n                sx={{ justifyContent: 'flex-start' }}\n              >\n                🗺️ Explore Map\n              </Button>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                onClick={() => navigate('/gamification')}\n                sx={{ justifyContent: 'flex-start' }}\n              >\n                🏆 View Achievements\n              </Button>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default SocialFeedPage;